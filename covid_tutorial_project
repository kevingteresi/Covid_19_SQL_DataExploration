--COVID DEATHS

-- Looking at Total Cases vs Total Deaths with Death Percentage
-- Death Percentage shows likelihood of dying if you contract covid in your country
Select location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 AS DeathPercentage
FROM public."CovidDeaths"
where location like '%States%'
order by 1,2


-- Looking at Total Cases vs Population
-- Shows what percentage of population got covid
Select location, date, total_cases, population, (total_cases/population)*100 AS infectionpercentage
FROM public."CovidDeaths"
where location like '%States%'
order by 1,2


-- Looking at Countries with Highest Infection Rate compared to Population
Select location, population, max(total_cases) as HighestInfectionCount, 
MAX(total_cases/population)*100 AS PercentPopulationInfected
FROM public."CovidDeaths"
group by location, population
order by PercentPopulationInfected desc







-- Showing Countries with Highest Death Count per Population
Select location, Max(total_deaths) as TotalDeathCount
FROM public."CovidDeaths"
where continent is not null
group by location
order by TotalDeathCount desc


-- Lets Break Things Down By Continent
-- Showing Countries with Highest Death Count per Population
Select location, Max(total_deaths) as TotalDeathCount
FROM public."CovidDeaths"
where continent is null
group by location
order by TotalDeathCount desc
 

-- GLOBAL NUMBERS
Select SUM(new_cases) as total_cases, SUM(new_deaths) as total_deaths, 
SUM(new_deaths)/SUM(new_cases) * 100 as death_percentage
FROM public."CovidDeaths"
where continent is not null
order by 1,2




--COVID VACCINATIONS



-- Looking at Total Population vs Vaccinations
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
SUM(vac.new_vaccinations) OVER (Partition by dea.location order by dea.location, dea.Date) as RollingPeopleVaccinated,
FROM public."CovidDeaths" dea
JOIN public."CovidVaccinations" vac
	ON dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null
order by 2,3


-- Looking at Total Population vs Vaccinations

-- USE CTE
with PopvsVac(Continent, Location, Date, Population, new_vaccinations, RollingPeopleVaccinated)
as
(
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
SUM(vac.new_vaccinations) OVER (Partition by dea.location order by dea.location, dea.Date) as RollingPeopleVaccinated
FROM public."CovidDeaths" dea
JOIN public."CovidVaccinations" vac
	ON dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null
)
select *, (RollingPeopleVaccinated/Population)*100
From PopvsVac

-- Looking at Total Population vs Vaccinations

-- TEMP TABLE
DROP Table if exists
Create Table #PercentPopulationVaccinated
(
Continent nvarchar(255),
Location nvarchar(255),
Date datetime,
Population numeric,
New_vaccinations numeric,
RollingPeopleVaccinated numeric
)
Insert Into #PercentPopulationVaccinated
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
SUM(vac.new_vaccinations) OVER (Partition by dea.location order by dea.location, dea.Date) as RollingPeopleVaccinated
FROM public."CovidDeaths" dea
JOIN public."CovidVaccinations" vac
	ON dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null

select *, (RollingPeopleVaccinated/Population)*100
From PopvsVac


-- Creating View to store data for later visualization
Create View PercentPopulationVaccinated as
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
SUM(vac.new_vaccinations) over (partition by dea.location Order by dea.location,
							   dea.Date) as RollingPeopleVaccinated
FROM public."CovidDeaths" dea
JOIN public."CovidVaccinations" vac
	ON dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null
